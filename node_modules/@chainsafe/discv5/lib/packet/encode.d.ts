import { IHandshakeAuthdata, IHeader, IMessageAuthdata, IPacket, IWhoAreYouAuthdata } from "./types.js";
export declare function encodePacket(destId: string, packet: IPacket): Uint8Array;
export declare function encodeHeader(destId: string, maskingIv: Uint8Array, header: IHeader): Uint8Array;
export declare function decodePacket(srcId: string, data: Uint8Array): IPacket;
/**
 * Return the decoded header and the header as a buffer
 */
export declare function decodeHeader(srcId: string, maskingIv: Uint8Array, data: Uint8Array): [IHeader, Uint8Array];
export declare function encodeWhoAreYouAuthdata(authdata: IWhoAreYouAuthdata): Uint8Array;
export declare function encodeMessageAuthdata(authdata: IMessageAuthdata): Uint8Array;
export declare function encodeHandshakeAuthdata(authdata: IHandshakeAuthdata): Uint8Array;
export declare function decodeWhoAreYouAuthdata(data: Uint8Array): IWhoAreYouAuthdata;
export declare function decodeMessageAuthdata(data: Uint8Array): IMessageAuthdata;
export declare function decodeHandshakeAuthdata(data: Uint8Array): IHandshakeAuthdata;
/**
 * Encode Challenge Data given masking IV and header
 * Challenge data doubles as message authenticated data
 */
export declare function encodeChallengeData(maskingIv: Uint8Array, header: IHeader): Uint8Array;
//# sourceMappingURL=encode.d.ts.map